name: Auto Push and Release (Magento-Payment)

on:
  push:
    branches:
      - magento-payment  # Trigger workflow only when this branch is updated

jobs:
  update-main:
    name: Sync Magento-Payment to Main
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Ensure Main Branch Exists
        run: |
          if git ls-remote --heads origin main | grep main; then
            echo "Main branch exists."
          else
            echo "Creating main branch."
            git checkout -b main
            git push origin main
          fi

      - name: Merge changes into main
        run: |
          git checkout main
          git merge --no-edit --strategy-option=theirs magento-payment || exit 0
          git push origin main

  release:
    name: Create Release
    needs: update-main
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest version and increment
        id: get_version
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "1.0.0")
          echo "Latest tag: $LATEST_TAG"

          # Extract major, minor, and patch versions
          MAJOR=$(echo $LATEST_TAG | cut -d. -f1)
          MINOR=$(echo $LATEST_TAG | cut -d. -f2)
          PATCH=$(echo $LATEST_TAG | cut -d. -f3)

          # Increment patch version
          NEW_VERSION="$MAJOR.$MINOR.$(($PATCH + 1))"
          echo "New version: $NEW_VERSION"

          # Save version as environment variable
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Create and push tag
        run: |
          git tag v${{ env.VERSION }}
          git push origin v${{ env.VERSION }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body: "Automated release from GitHub Actions"
          draft: false
          prerelease: false
